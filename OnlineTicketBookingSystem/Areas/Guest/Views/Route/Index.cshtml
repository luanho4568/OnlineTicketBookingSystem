@model OnlineTicketBookingSystem.Models.ViewModel.TripVM
@{
    ViewData["Title"] = "Chuyến xe";
}
<style>
    .seat {
        cursor: pointer;
    }

        .seat.bg-success:hover {
            opacity: 0.8;
        }

        .seat.bg-warning:hover {
            opacity: 0.8;
        }

    .btn.disabled {
        background-color: #6c757d; /* Màu xám tối */
        border-color: #6c757d; /* Đường vi màu xám tối */
        cursor: not-allowed; /* Thay đổi con trỏ khi hover */
        opacity: 0.65; /* Giảm độ sáng */
    }
</style>
<!-- Search Section -->
<div class="search-section bg-light text-dark p-4 container mt-4" style="border-radius: 12px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
    <div class="container">
        <h4 class="text-center mb-3 h2"><em>Tìm Kiếm Chuyến Đi</em></h4>
        <form method="post" asp-action="Index" enctype="multipart/form-data">
            <div class="row align-items-center">
                <div class="col-md-3 mb-3">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-bus-alt text-info fa-2x"></i></span>
                        <select class="form-control" id="provinceDropdown" asp-items="@Model.Province" asp-for="@Model.Trip.StartPoint" class="form-select">
                            <option disabled selected>Chọn điểm đi</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-map-marker-alt  text-danger fa-2x"></i></span>
                        <select class="form-control" id="provinceDropdown" asp-items="@Model.Province" asp-for="@Model.Trip.EndPoint" class="form-select">
                            <option disabled selected>Chọn điểm đến</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-calendar-alt text-primary fa-2x"></i></span>
                        <input type="date" class="form-control" id="departureDate" asp-for="@Model.Trip.DepartureDate">
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <button type="submit" class="btn btn-warning w-75 p-2 border-warning" style="border-radius : 12px; font-size:25px">Tìm kiếm</button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Filter and Trip Cards Section -->
<div class="container my-5">
    <div class="row">
        <!-- Filter Section -->
        <div class="col-md-3 mb-4">
            <div class="filter-section bg-white p-4 border rounded" style="border-radius: 12px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);">
                <h5 class="mb-3">Sắp xếp theo</h5>
                <div>
                    <input type="radio" id="sortDefault" name="sort" value="default" checked>
                    <label for="sortDefault" class="mb-2">Mặc định</label><br>
                    <input type="radio" id="sortPriceAsc" name="sort" value="priceAsc">
                    <label for="sortPriceAsc" class="mb-2">Giá tăng dần</label><br>
                    <input type="radio" id="sortPriceDesc" name="sort" value="priceDesc">
                    <label for="sortPriceDesc" class="mb-2">Giá giảm dần</label><br>
                    <input type="radio" id="sortTimeEarly" name="sort" value="timeEarly">
                    <label for="sortTimeEarly" class="mb-2">Giờ đi sớm</label><br>
                    <input type="radio" id="sortTimeLate" name="sort" value="timeLate">
                    <label for="sortTimeLate">Giờ đi muộn</label>
                </div>
            </div>
        </div>

        <!-- Trip Cards Section -->
        <div class="col-md-9">
            <div class="row justify-content-center">
                @if (Model.TripList != null && Model.TripList.Any())
                {
                    foreach (var trip in Model.TripList)
                    {
                        <div class="col-12 trip-card mb-4">
                            <div class="d-flex flex-column flex-md-row align-items-center bg-white border rounded p-4" style="border-radius: 12px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);">
                                <img src="/@trip.Buses.Image" class="mb-3 w-100 d-md-none" alt="Xe Khách @trip.Id" style="border-radius: 12px;">
                                <img src="/@trip.Buses.Image" class="me-3 d-none d-md-block" alt="Xe Khách @trip.Id" style="width: 200px; height: 150px;">
                                <div class="flex-grow-1 w-100">
                                    <div class="d-md-flex justify-content-between">
                                        <div class="text-center text-md-start mb-2 mb-md-0">
                                            <h5 class="card-title" style="font-size: 22px; font-weight: bold;">@trip.Buses.Name</h5>
                                            <p class="card-text" style="font-size: 18px;">Tổng: @trip.Buses.TotalSeats chỗ</p>
                                            <p class="card-text" style="font-size: 18px;">Ngày: @(trip.DepartureDate.HasValue ? trip.DepartureDate.Value.ToString("dd/MM/yyyy") : "N/A")</p>
                                            <p class="card-text" style="font-size: 18px;">@trip.DepartureTime @trip.StartProvince.Name - @trip.EndProvince.Name</p>
                                        </div>
                                        <div class="text-center text-md-end">
                                            <p class="card-text" style="font-size: 22px; font-weight: bold;">
                                                @(trip.Price.HasValue ? trip.Price.Value.ToString("N0").Replace(",", ".") : "0") đ
                                            </p>
                                            <p class="card-text" style="font-size: 18px;">
                                                @(trip.Buses.EmptySeats == 0 ? "Hết chỗ" : $"Còn: {trip.Buses.EmptySeats} chỗ trống")
                                            </p>
                                            <a href="#" class="btn btn-info" style="border-radius: 8px; font-size: 22px;" onclick="loadSeats('@trip.Buses.Id', '@trip.Id', @trip.Price.Value); return false;">Chi tiết</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="container my-5 bg-white border rounded shadow-lg p-4" id="seatsDetail-@trip.Id" style="display: none;">
                                <div class="row">
                                    <!-- Ghi chú trạng thái ghế -->
                                    <div class="col-md-6 text-center">
                                        <h5 class="mb-3 text-secondary">Ghi Chú Trạng Thái Ghế</h5>
                                        <ul class="list-unstyled">
                                            <li><span class="badge bg-danger shadow-sm"><i class="fas fa-user-tie seat-icon"></i></span> - Dành cho tài xế</li>
                                            <li><span class="badge bg-success shadow-sm"><i class="fas fa-couch seat-icon"></i></span> - Ghế có thể đặt</li>
                                            <li><span class="badge bg-warning text-dark shadow-sm"><i class="fas fa-user-check seat-icon"></i></span> - Ghế bạn đã chọn</li>
                                            <li><span class="badge bg-secondary shadow-sm"><i class="fas fa-ban seat-icon"></i></span> - Ghế đã được đặt</li>
                                        </ul>
                                    </div>

                                    <!-- Danh sách ghế -->
                                    <div class="col-md-6 text-center">
                                        <h5 class="mb-3 text-secondary">Danh Sách Ghế</h5>
                                        <div id="seatsDisplay" class="d-flex flex-wrap justify-content-center align-items-center border rounded p-3 mb-3" style="background-color: #f5f5f5; box-shadow: inset 0px 0px 8px rgba(0, 0, 0, 0.1);"></div>
                                        @if (trip.Buses.EmptySeats > 0)
                                        {
                                            <h5 class="mb-3">Số Ghế Đã Chọn: <span id="selectedSeatsCount" class="text-primary">0</span></h5>
                                        }
                                        <button id="purchaseButton" class="btn btn-success shadow @(trip.Buses.EmptySeats == 0 ? "disabled" : "")" @(trip.Buses.EmptySeats == 0 ? "disabled" : "")>
                                            <i class="fas fa-ticket-alt"></i> Mua Vé
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>Không tìm thấy chuyến đi nào.</p>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let selectedSeats = []; // Mảng để lưu ghế đã chọn

        function loadSeats(busId, tripId, price) {
            const seatsDetail = $(`#seatsDetail-${tripId}`);

            if (seatsDetail.is(':visible')) {
                seatsDetail.hide();
                resetSelectedSeats(); // Reset ghế đã chọn
                return;
            } else {
                $('[id^=seatsDetail-]').hide(); // Ẩn tất cả các phần chi tiết ghế
            }

            $.ajax({
                url: `/api/v1/bus/GetSeatsByBusId/${busId}`,
                method: 'GET',
                success: function (response) {
                    if (response.code === 200) {
                        seatsDetail.show();
                        seatsDetail.find('#seatsDisplay').empty();
                        resetSelectedSeats();

                        response.data.sort((a, b) => parseInt(a.seatNumber.substring(1)) - parseInt(b.seatNumber.substring(1)));
                        const seatsInColumn = 8;
                        const columns = Math.ceil(response.data.length / seatsInColumn);

                        for (let j = 0; j < columns; j++) {
                            const columnDiv = $('<div class="d-flex flex-column me-2"></div>');
                            for (let i = 0; i < seatsInColumn; i++) {
                                const index = i + j * seatsInColumn;
                                if (index < response.data.length) {
                                    const seat = response.data[index];
                                    const iconClass = seat.status === "Driver" ? 'fa-user-tie' :
                                        seat.status === "Empty" ? 'fa-couch' :
                                            seat.status === "Selected" ? 'fa-user-check' :
                                                'fa-ban';

                                    const statusClass = seat.status === "Driver" ? "bg-danger" :
                                        seat.status === "Empty" ? "bg-success" :
                                            seat.status === "Selected" ? "bg-warning text-dark" :
                                                "bg-secondary";

                                    columnDiv.append(
                                        `<div class="seat mb-2 ${statusClass} text-white p-2" data-id="${seat.id}">
                                                                                <i class="fas ${iconClass} seat-icon"></i>
                                                                                <span>${seat.seatNumber}</span>
                                                                            </div>`
                                    );
                                }
                            }
                            seatsDetail.find('#seatsDisplay').append(columnDiv);
                        }

                        $('.seat.bg-success').off('click').on('click', function () {
                            const seatNumber = $(this).find('span').text();
                            const seatId = $(this).data('id');

                            if ($(this).hasClass('bg-warning')) {
                                $(this).removeClass('bg-warning text-dark').addClass('bg-success');
                                $(this).find('.seat-icon').removeClass('fa-user-check').addClass('fa-couch');
                                selectedSeats = selectedSeats.filter(seat => seat.seatId !== seatId);
                            } else {
                                $(this).removeClass('bg-success').addClass('bg-warning text-dark');
                                $(this).find('.seat-icon').removeClass('fa-couch').addClass('fa-user-check');
                                selectedSeats.push({ seatId, seatNumber, price }); // Thêm giá vào ghế đã chọn
                            }
                            seatsDetail.find('#selectedSeatsCount').text(selectedSeats.length);
                        });

                        seatsDetail.find('#purchaseButton').off('click').on('click', function () {
                            if (selectedSeats.length > 0) {
                                $.ajax({
                                    url: '/api/v1/Token/ValidateAndDecodeToken', // API để giải mã token
                                    type: 'POST',
                                    contentType: 'application/json',
                                    data: JSON.stringify(token), // Gửi token tới API để kiểm tra
                                    success: function (response) {
                                        var decodedToken = response.data;
                                        const ticketData = {
                                            userId: decodedToken.nameid,
                                            tripId: tripId,
                                            seatIds: selectedSeats.map(seat => seat.seatId),
                                            price: price
                                        };
                                        $.ajax({
                                            url: '/api/v1/ticket/BookTickets',
                                            method: 'POST',
                                            contentType: 'application/json',
                                            data: JSON.stringify(ticketData),
                                            success: function (response) {
                                                console.log(response);
                                                Swal.fire({
                                                    icon: 'success',
                                                    title: response.message,
                                                    text: 'Vui lòng kiểm tra giỏ hàng!',
                                                    showConfirmButton: false,
                                                    timer: 1500
                                                });
                                                $.ajax({
                                                    url: `/api/v1/bus/GetSeatsByBusId/${busId}`, // Bạn có thể cần thay đổi busId
                                                    method: 'GET',
                                                    success: function (seatsResponse) {
                                                        if (seatsResponse.code === 200) {
                                                            updateSeatDisplay(seatsResponse.data, tripId);
                                                        }
                                                    }
                                                });
                                                resetSelectedSeats();
                                            },
                                            error: function (e) {
                                                const errorMessage = JSON.parse(e.responseText).message;
                                                const errorCode = JSON.parse(e.responseText).code;
                                                console.log(errorMessage)
                                                console.log(errorCode)
                                                if (errorCode === -1) {
                                                    Swal.fire({
                                                        title: errorMessage,
                                                        text: "Vui lòng nạp thêm tiền vào ví!",
                                                        icon: "warning",
                                                        showCancelButton: true,
                                                        confirmButtonColor: "#3085d6",
                                                        cancelButtonColor: "#d33",
                                                        confirmButtonText: "Nạp tiền",
                                                        cancelButtonText: "Huỷ",
                                                    }).then((result) => {
                                                        if (result.isConfirmed) {
                                                            window.location.href = "/Guest/Stripe"
                                                        }
                                                    });
                                                } else {
                                                    Swal.fire({
                                                        icon: 'error',
                                                        title: 'Lỗi',
                                                        text: errorMessage,
                                                        confirmButtonText: 'OK'
                                                    });
                                                }
                                            }
                                        });

                                    },
                                    error: function (e) {
                                        localStorage.removeItem('user');
                                        localStorage.removeItem('authToken');
                                        Swal.fire({
                                            icon: "error",
                                            title: JSON.parse(e.responseText).message,
                                            text: "Vui lòng đăng nhập lại",
                                        }).then(() => {
                                            window.location.href = '/Account/Login';

                                        });
                                    }
                                });
                            } else {
                                Swal.fire({
                                    icon: "warning",
                                    title: "Vui lòng chọn ít nhất 1 chỗ!",
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                            }
                        });

                    } else {
                        console.log(response.message);
                    }
                },
                error: function (e) {
                    console.log(JSON.parse(e.responseText).message);
                }
            });
        }
        function updateSeatDisplay(seats, tripId) {
            const seatsDisplay = $(`#seatsDetail-${tripId} #seatsDisplay`);
            seatsDisplay.empty();

            // Cập nhật lại hiển thị ghế tương tự như trong hàm loadSeats
            // Sắp xếp ghế theo số ghế
            seats.sort((a, b) => {
                return parseInt(a.seatNumber.substring(1)) - parseInt(b.seatNumber.substring(1));
            });

            const seatsInColumn = 8;
            const columns = Math.ceil(seats.length / seatsInColumn);
            for (let j = 0; j < columns; j++) {
                const columnDiv = $('<div class="d-flex flex-column me-2"></div>');
                for (let i = 0; i < seatsInColumn; i++) {
                    const index = i + j * seatsInColumn;
                    if (index < seats.length) {
                        const seat = seats[index];
                        const iconClass = seat.status === "Driver" ? 'fa-user-tie' :
                            seat.status === "Empty" ? 'fa-couch' :
                                seat.status === "Selected" ? 'fa-user-check' :
                                    'fa-ban';

                        const statusClass = seat.status === "Driver" ? "bg-danger" :
                            seat.status === "Empty" ? "bg-success" :
                                seat.status === "Selected" ? "bg-warning text-dark" :
                                    "bg-secondary";

                        columnDiv.append(
                            `<div class="seat mb-2 ${statusClass} text-white p-2" data-id="${seat.id}">
                                                                    <i class="fas ${iconClass} seat-icon"></i>
                                                                    <span>${seat.seatNumber}</span>
                                                                </div>`
                        );
                    }
                }
                seatsDisplay.append(columnDiv);
            }
        } function resetSelectedSeats() {
            selectedSeats = [];
            $('[id^=seatsDetail-] .seat').removeClass('bg-warning text-dark').addClass('bg-success');
            $('[id^=seatsDetail-] .seat .seat-icon').removeClass('fa-user-check').addClass('fa-couch');
            $('[id^=seatsDetail-] #selectedSeatsCount').text('0');
        }

    </script>

}

